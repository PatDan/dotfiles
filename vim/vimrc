set nocompatible              " required
filetype off                  " required
filetype plugin indent on
syntax on

" Powerline
set rtp+=/usr/lib/python3.5/site-packages/powerline/bindings/vim/

" Pathogen
execute pathogen#infect()
" Always show statusline
set laststatus=2

" Use 256 colours (Use this setting only if your terminal supports 256
" colours)
set t_Co=256

" Autoreload .vimrc
autocmd! bufwritepost .vimrc source %

let mapleader ="\<Space>"
" Move lines
let c='a'
while c <= 'z'
  exec "set <A-".c.">=\e".c
  exec "imap \e".c." <A-".c.">"
  let c = nr2char(1+char2nr(c))
endw

set timeout ttimeoutlen=50

nnoremap <A-j> :m .+1<CR>==
nnoremap <A-k> :m .-2<CR>==
inoremap <A-j> <Esc>:m .+1<CR>==gi
inoremap <A-k> <Esc>:m .-2<CR>==gi
vnoremap <A-j> :m '>+1<CR>gv=gv
vnoremap <A-k> :m '<-2<CR>gv=gv

" Save and/or exit"
map <Leader>w :w<CR>
map <Leader>x :x!<CR>
map <Leader>q :q!<CR>

" Copy paste
set clipboard=unnamed
vmap <C-c> "+y
vmap <C-x> "+c
vmap <C-v> c<ESC>"+p
imap <C-v> <ESC>"+pa


" Mouse 
set mouse=a

" Showing line numbers and length
set number
set tw=79
set nowrap
set fo-=t

"Save marks between sessions
set viminfo='1000,f1

" C settings
set exrc
set secure
let &path.="src/include,/usr/include/AL,"
nnoremap <Leader>c :make!<cr>
nnoremap <Leader>e :silent !clear<cr> <bar> :!./%<<cr>
nnoremap <Leader>C :!./%<<cr>

" Visible line for line length
set colorcolumn=81
highlight ColorColumn ctermbg=234

" Autoclose function documentation in autocomplete
autocmd CursorMovedI * if pumvisible() == 0|pclose|endif
autocmd InsertLeave * if pumvisible() == 0|pclose|endif

set background=dark

" Color settings
highlight linenr ctermfg=244
highlight CursorLineNr ctermfg=244
highlight NonText ctermfg=234
highlight PreProc ctermfg=1
highlight Special ctermfg=4
highlight Type ctermfg=2
highlight VertSplit ctermfg=238
highlight VertSplit ctermbg=238
highlight StatusLineNC ctermfg=240
highlight Directory ctermfg=6
highlight Title ctermfg=15
set relativenumber

"Nerdtree settings
map <Leader>n <plug>NERDTreeTabsToggle<CR>
let g:NERDTreeWinPos = "right"

"Split navigations
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>
set tabstop=4
set softtabstop=4
set shiftwidth=4

"Python settings
au BufNewFile,BufRead *.py set tabstop=4
au BufNewFile,BufRead *.py set softtabstop=4
au BufNewFile,BufRead *.py set shiftwidth=4
au BufNewFile,BufRead *.py set textwidth=79
au BufNewFile,BufRead *.py set expandtab
au BufNewFile,BufRead *.py set autoindent
au BufNewFile,BufRead *.py set fileformat=unix	

"C settings
au BufNewFile,BufRead *.c set tabstop=4
au BufNewFile,BufRead *.c set softtabstop=4
au BufNewFile,BufRead *.c set shiftwidth=4
au BufNewFile,BufRead *.c set noexpandtab

"Haskell settings
au BufNewFile,BufRead *.hs set tabstop=8                   "A tab is 8 spaces
au BufNewFile,BufRead *.hs set expandtab                   "Always uses spaces instead of tabs
au BufNewFile,BufRead *.hs set softtabstop=4               "Insert 4 spaces when tab is pressed
au BufNewFile,BufRead *.hs set shiftwidth=4                "An indent is 4 spaces
au BufNewFile,BufRead *.hs set shiftround                  "Round indent to nearest shiftwidth multiple
" let g:ghc="/usr/bin/ghc-6.6.1"
" au BufEnter *.hs compiler ghc
" let g:haddock_browser="/usr/bin/firefox"
